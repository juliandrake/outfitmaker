/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package outfitmaker;

import java.awt.Color;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.text.AttributeSet;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;

/**
 *
 * @author julian
 */
public class OutfitMakerUI extends javax.swing.JFrame {

    static ColorMatchFinder matchFinder;
    static ArrayList<ClothingGeneric> tops;
    static ArrayList<ClothingGeneric> bottoms;
    static ArrayList<ClothingGeneric> accessories;
    static ArrayList<ClothingGeneric> nailPolishes;
    
    /**
     * Creates new form OutfitMakerUI
     */
    public OutfitMakerUI() {
        matchFinder = new ColorMatchFinder();
        initComponents();
    }
    
    public static void addTop(String name, String brand, EnumColor mainColor, EnumColor accentColor, ClothingType type) {
        tops.add(new ClothingGeneric(name, brand, mainColor, accentColor, type));
    }
    
    public static void addBottom(String name, String brand, EnumColor mainColor, EnumColor accentColor, ClothingType type) {
        bottoms.add(new ClothingGeneric(name, brand, mainColor, accentColor, type));
    }
    
    public static void addAccessory(String name, String brand, EnumColor mainColor, EnumColor accentColor, ClothingType type) {
        accessories.add(new ClothingGeneric(name, brand, mainColor, accentColor, type));
    }
    
    public static void addNailPolish(String name, String brand, EnumColor mainColor, EnumColor accentColor, ClothingType type) {
        nailPolishes.add(new ClothingGeneric(name, brand, mainColor, accentColor, type));
    }
    
    public static Outfit generateOutfit(Random rand) {
  
        
        ClothingGeneric top = tops.get(rand.nextInt(tops.size()));
        ClothingGeneric none = new ClothingGeneric("empty", "", EnumColor.WHITE, EnumColor.WHITE, ClothingType.NONE);
        ClothingGeneric bottomFinal = none;
        ClothingGeneric accessoryFinal = none;
        ClothingGeneric nailPolishFinal = none;
        
        ArrayList<ClothingGeneric> bottomsShuffled = bottoms;
        //Collections.shuffle(bottomsShuffled, rand);
        Collections.shuffle(bottoms, rand);
        Collections.shuffle(accessories, rand);
        Collections.shuffle(nailPolishes, rand);
        
        for (ClothingGeneric bottom : bottoms) {
            if (doesEverythingMatch(top, bottom)) {
                // we have a bottom
                if (accessoryBox.isSelected()) {
                    for (ClothingGeneric accessory : accessories) {
                        if (doesEverythingMatch(top, accessory)) {
                                if (top.getType().equals(ClothingType.GRAPHIC_TEE)) {
                                    accessoryFinal = accessory;
                                }else {
                                accessoryFinal = accessory;
                            }
                            
                            break;
                        }
                    }
                }
                if (nailPolishBox.isSelected()) {
                    for (ClothingGeneric nailPolish : nailPolishes) {
                        if (doesEverythingMatch(top, nailPolish)) {
                            nailPolishFinal = nailPolish;
                            break;
                        }
                    }
                }
                
                bottomFinal = bottom;
                break;
                
                
            }
        }
        
        return new Outfit(top, bottomFinal, accessoryFinal, nailPolishFinal);
    }
    
    public static boolean doesEverythingMatch(ClothingGeneric top, ClothingGeneric bottom) {
        return (matchFinder.checkMatch(top.getMainColor(), bottom.getMainColor()) && matchFinder.checkMatch(top.getMainColor(), bottom.getAccentColor()) && matchFinder.checkMatch(top.getAccentColor(), bottom.getMainColor()) && matchFinder.checkMatch(top.getAccentColor(), bottom.getAccentColor()));
    }
    
    
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        accessoryBox = new javax.swing.JCheckBox();
        nailPolishBox = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        topPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        bottomPane = new javax.swing.JTextPane();
        bottomLabel = new javax.swing.JLabel();
        topPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        topPane = new javax.swing.JTextPane();
        topLabel = new javax.swing.JLabel();
        nailPolishPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        nailPolishPane = new javax.swing.JTextPane();
        nailPolishLabel = new javax.swing.JLabel();
        accessoryPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        accessoryPane = new javax.swing.JTextPane();
        accessoryLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(237, 203, 177));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Outfit Maker", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("UD Digi Kyokasho NP-B", 1, 18))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(237, 203, 177));

        jButton1.setFont(new java.awt.Font("UD Digi Kyokasho NP-B", 1, 18)); // NOI18N
        jButton1.setText("generate outfit!");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        accessoryBox.setText("Pick Accessory");

        nailPolishBox.setText("Pick Nail Polish");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(accessoryBox)
                    .addComponent(nailPolishBox))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(accessoryBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nailPolishBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Your Outfit", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, jButton1.getFont()));

        topPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Bottom", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("UD Digi Kyokasho NK-R", 0, 14))); // NOI18N

        bottomPane.setEditable(false);
        jScrollPane1.setViewportView(bottomPane);

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bottomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                .addContainerGap())
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bottomLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE))
                .addContainerGap())
        );

        topPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Top", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("UD Digi Kyokasho NK-R", 0, 14))); // NOI18N

        topPane.setEditable(false);
        jScrollPane2.setViewportView(topPane);

        javax.swing.GroupLayout topPanel1Layout = new javax.swing.GroupLayout(topPanel1);
        topPanel1.setLayout(topPanel1Layout);
        topPanel1Layout.setHorizontalGroup(
            topPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(topLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                .addContainerGap())
        );
        topPanel1Layout.setVerticalGroup(
            topPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanel1Layout.createSequentialGroup()
                .addGroup(topPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .addComponent(topLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        nailPolishPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nail Polish", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("UD Digi Kyokasho NK-R", 0, 14))); // NOI18N

        nailPolishPane.setEditable(false);
        jScrollPane3.setViewportView(nailPolishPane);

        javax.swing.GroupLayout nailPolishPanelLayout = new javax.swing.GroupLayout(nailPolishPanel);
        nailPolishPanel.setLayout(nailPolishPanelLayout);
        nailPolishPanelLayout.setHorizontalGroup(
            nailPolishPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, nailPolishPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nailPolishLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                .addContainerGap())
        );
        nailPolishPanelLayout.setVerticalGroup(
            nailPolishPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nailPolishPanelLayout.createSequentialGroup()
                .addGroup(nailPolishPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addComponent(nailPolishLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        accessoryPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Accessory", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("UD Digi Kyokasho NK-R", 0, 14))); // NOI18N

        accessoryPane.setEditable(false);
        jScrollPane4.setViewportView(accessoryPane);

        javax.swing.GroupLayout accessoryPanelLayout = new javax.swing.GroupLayout(accessoryPanel);
        accessoryPanel.setLayout(accessoryPanelLayout);
        accessoryPanelLayout.setHorizontalGroup(
            accessoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, accessoryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(accessoryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                .addContainerGap())
        );
        accessoryPanelLayout.setVerticalGroup(
            accessoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accessoryPanelLayout.createSequentialGroup()
                .addGroup(accessoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addComponent(accessoryLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(topPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(accessoryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(topPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nailPolishPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(topPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(accessoryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(topPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nailPolishPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel2.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addInfoToPane(JTextPane pane, ClothingGeneric item) {
        pane.setText("");
        if (!item.getName().equals("empty")) {
            addToPane(pane, "Name: "+item.getName());
            addToPane(pane, "-Brand: "+item.getBrand());
            if (item.getMainColor().equals(item.getAccentColor())) {
                addToPane(pane, "-Color: "+item.getMainColor().name);
            } else {
                addToPane(pane, "-Main Color: "+item.getMainColor().name);
                addToPane(pane, "-Accent Color: "+item.getAccentColor().name);
            }
        }
    }
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Random rand = new Random();
        Outfit generatedOutfit = generateOutfit(rand);
        ClothingGeneric top = generatedOutfit.getTop();
        ClothingGeneric bottom = generatedOutfit.getBottom();
        ClothingGeneric accessory = generatedOutfit.getAccessory();
        ClothingGeneric nailPolish = generatedOutfit.getNailPolish();

        
        addInfoToPane(topPane, top);
        addInfoToPane(bottomPane, bottom);
        addInfoToPane(accessoryPane, accessory);
        addInfoToPane(nailPolishPane, nailPolish);
        generatedOutfit.printOutfit();
        try {
            topLabel.setIcon(generatedOutfit.getTop().getIcon());
            bottomLabel.setIcon(generatedOutfit.getBottom().getIcon());
            accessoryLabel.setIcon(generatedOutfit.getAccessory().getIcon());
            nailPolishLabel.setIcon(generatedOutfit.getNailPolish().getIcon());
        } catch (IOException ex) {
            Logger.getLogger(OutfitMakerUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OutfitMakerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OutfitMakerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OutfitMakerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OutfitMakerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(OutfitMakerUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(OutfitMakerUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(OutfitMakerUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(OutfitMakerUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                tops = new ArrayList<>();
                bottoms = new ArrayList<>();
                accessories = new ArrayList<>();
                nailPolishes = new ArrayList<>();

                Random rand = new Random();

                // define clothing
                addTop("Pink Sweater", "Amazon Essentials", EnumColor.PINK, EnumColor.PINK, ClothingType.STRIPED_SWEATER);
                addTop("Classic Jersey T-Shirt", "Champion", EnumColor.BLACK ,EnumColor.BLACK, ClothingType.GRAPHIC_TEE);
                addTop("Black Striped Long Sleeve Crewneck", "Lunoakvo", EnumColor.BLACK, EnumColor.GRAY, ClothingType.STRIPED_CREWNECK);
                addTop("Blue Striped Long Sleeve Tee", "Soffe", EnumColor.DARK_BLUE, EnumColor.WHITE, ClothingType.CENTER_STRIPED_SWEATER);
                addTop("Bladee Razorwire Tee", "BLADEE", EnumColor.BLACK, EnumColor.RED, ClothingType.GRAPHIC_TEE);
                addTop("Unknown Death 2002 Tee", "yungleangear", EnumColor.WHITE, EnumColor.PINK, ClothingType.GRAPHIC_TEE);
                addTop("White Long Sleeve Top", "Old Navy", EnumColor.WHITE, EnumColor.WHITE, ClothingType.STRIPED_SWEATER);
                addTop("Red Striped Long Sleeve Crewneck", "Forever 21", EnumColor.RED, EnumColor.WHITE, ClothingType.STRIPED_CREWNECK);
                addTop("Aero 87 Hoodie", "Aeropostale", EnumColor.YELLOW, EnumColor.DARK_BLUE, ClothingType.HOODIE);
                addTop("Striped Sweater", "Croft & Barrow", EnumColor.BROWN, EnumColor.WHITE, ClothingType.STRIPED_SWEATER);
                addTop("Covet Tee", "Gildan", EnumColor.RED, EnumColor.WHITE, ClothingType.GRAPHIC_TEE);
                addTop("SeeYouSpaceCowboy Tee", "Alstyle", EnumColor.BLACK, EnumColor.RED, ClothingType.GRAPHIC_TEE);
                addTop("Green/Blue Sweater", "unknown", EnumColor.GREEN, EnumColor.GREEN, ClothingType.STRIPED_SWEATER);
                addTop("Light Blue Striped Crewneck", "Amazon Essentials", EnumColor.LIGHT_BLUE, EnumColor.WHITE, ClothingType.STRIPED_CREWNECK);
                addTop("Oxford Grey/Oatmeal Sweater", "Champion", EnumColor.GRAY, EnumColor.WHITE, ClothingType.CREWNECK);
                addTop("Long Sleeve Fleece", "Avalanche", EnumColor.GRAY, EnumColor.GRAY, ClothingType.STRIPED_SWEATER);
                addTop("Colorblock Long Sleeve Pullover", "DIDK", EnumColor.BLACK, EnumColor.PINK, ClothingType.BLOCK_STRIPED_SWEATER);
                addTop("Mock-Neck Pullover", "Daily Ritual", EnumColor.RED, EnumColor.RED, ClothingType.STRIPED_SWEATER);
                addTop("Shin Guard 'Hazmat' Tee", "Gildan", EnumColor.BLACK, EnumColor.RED, ClothingType.GRAPHIC_TEE);
                addTop("Striped Long Sleeve Top", "Goodfellow", EnumColor.YELLOW, EnumColor.WHITE, ClothingType.STRIPED_LONG_SLEEVE);
                addTop("Striped Long Sleeve Top", "Shuiangran", EnumColor.BLACK, EnumColor.WHITE, ClothingType.STRIPED_LONG_SLEEVE);
                addTop("Striped Pullover", "Arizona", EnumColor.DARK_BLUE, EnumColor.WHITE, ClothingType.STRIPED_SWEATER);
                addTop("Plain Sweater", "Universal Thread Goods Co.", EnumColor.TAN, EnumColor.TAN, ClothingType.STRIPED_SWEATER);
                addTop("Shin Guard 'Cube' Tee", "Gildan", EnumColor.BLACK, EnumColor.WHITE, ClothingType.GRAPHIC_TEE);
                addTop("CalcuSolve 2018 Tee", "Gildan", EnumColor.RED, EnumColor.WHITE, ClothingType.GRAPHIC_TEE);
                addTop("Striped Sweater", "J. Crew", EnumColor.BLACK, EnumColor.WHITE, ClothingType.STRIPED_SWEATER);
                addTop("Striped Sweater", "Unknown", EnumColor.LIGHT_BLUE, EnumColor.WHITE, ClothingType.STRIPED_SWEATER);
                addTop("Striped Sweater", "Merona", EnumColor.DARK_BLUE, EnumColor.WHITE, ClothingType.CENTER_STRIPED_SWEATER);
                addTop("Knocked Loose 'Mistakes Like Fractures' Tee", "Gildan", EnumColor.TAN, EnumColor.RED, ClothingType.GRAPHIC_TEE);
                addTop("Dark Gray Sweater", "H&M", EnumColor.GRAY, EnumColor.GRAY, ClothingType.STRIPED_SWEATER);
                addTop("Frankie Cosmos 'Zentropy' Tee", "Double Double Whammy", EnumColor.WHITE, EnumColor.BLACK, ClothingType.GRAPHIC_TEE);
                addTop("New Order 'Power, Corruption, & Lies' Tee", "Tultex", EnumColor.GRAY, EnumColor.WHITE, ClothingType.GRAPHIC_TEE);
                addTop("Floral Pullover", "Romwe", EnumColor.DARK_BLUE, EnumColor.DARK_BLUE, ClothingType.STRIPED_LONG_SLEEVE);
                
                addBottom("Jeans", "Levi's", EnumColor.DARK_BLUE, EnumColor.DARK_BLUE, ClothingType.JEANS);
                addBottom("Jeans", "Levi's", EnumColor.LIGHT_BLUE, EnumColor.LIGHT_BLUE, ClothingType.JEANS);
                addBottom("Jeans", "Wrangler", EnumColor.DARK_BLUE, EnumColor.DARK_BLUE, ClothingType.JEANS);
                addBottom("Khaki Pants", "Goodfellow", EnumColor.TAN, EnumColor.TAN, ClothingType.JEANS);
                addBottom("Athletic Shorts", "Motarto", EnumColor.BLACK, EnumColor.WHITE, ClothingType.SHORTS);
                addBottom("Athletic Shorts", "Motarto", EnumColor.GRAY, EnumColor.WHITE, ClothingType.SHORTS);
                addBottom("Athletic Shorts", "maamgic", EnumColor.BLACK, EnumColor.WHITE, ClothingType.SHORTS);
                addBottom("Athletic Shorts", "Champion", EnumColor.GRAY, EnumColor.GRAY, ClothingType.SHORTS);
                addBottom("Skinny Jeans", "Lee", EnumColor.LIGHT_BLUE, EnumColor.LIGHT_BLUE, ClothingType.JEANS);
                addBottom("Black Jeans", "Levi's", EnumColor.BLACK, EnumColor.BLACK, ClothingType.JEANS);
                
                addAccessory("Pastel Bead Bracelet", "Angelstones", EnumColor.LIGHT_BLUE, EnumColor.PINK, ClothingType.BEAD_BRACELET);
                addAccessory("Amethyst Bead Bracelet", "Angelstones", EnumColor.PURPLE, EnumColor.PURPLE, ClothingType.BEAD_BRACELET);
                addAccessory("Amazfit Neo Smartwatch", "Amazfit", EnumColor.BLACK, EnumColor.BLACK, ClothingType.DIGITAL_WATCH);
                addAccessory("Timex Weekender 38mm Watch", "Timex", EnumColor.LIGHT_BLUE, EnumColor.WHITE, ClothingType.ANALOG_WATCH);
                
                addNailPolish("490 Urban Nail Polish", "Revlon", EnumColor.DARK_BLUE, EnumColor.DARK_BLUE, ClothingType.NAIL_POLISH);
                addNailPolish("Pastel Blue Nail Polish", "Nicole Miller", EnumColor.LIGHT_BLUE, EnumColor.LIGHT_BLUE, ClothingType.NAIL_POLISH);
                addNailPolish("Pastel Pink Nail Polish", "Nicole Miller", EnumColor.PINK, EnumColor.PINK, ClothingType.NAIL_POLISH);
                addNailPolish("Pastel Purple Nail Polish", "Nicole Miller", EnumColor.PURPLE, EnumColor.PURPLE, ClothingType.NAIL_POLISH);
                addNailPolish("Pastel Red Nail Polish", "Nicole Miller", EnumColor.RED, EnumColor.RED, ClothingType.NAIL_POLISH);
                addNailPolish("Dark Blue-Green Nail Polish", "Nicole Miller", EnumColor.DARK_BLUE, EnumColor.GREEN, ClothingType.NAIL_POLISH);
                addNailPolish("Bold Red Nail Polish", "Nicole Miller", EnumColor.RED, EnumColor.RED, ClothingType.NAIL_POLISH);
                addNailPolish("Metallic Purple Nail Polish", "Nicole Miller", EnumColor.PURPLE, EnumColor.PURPLE, ClothingType.NAIL_POLISH);
                addNailPolish("Bold Purple Nail Polish", "Nicole Miller", EnumColor.PURPLE, EnumColor.PURPLE, ClothingType.NAIL_POLISH);
                addNailPolish("Metallic Gold Nail Polish", "Nicole Miller", EnumColor.YELLOW, EnumColor.YELLOW, ClothingType.NAIL_POLISH);
                addNailPolish("Metallic Pink Nail Polish", "Nicole Miller", EnumColor.PINK, EnumColor.PINK, ClothingType.NAIL_POLISH);
                addNailPolish("Metallic Copper Nail Polish", "Nicole Miller", EnumColor.BROWN, EnumColor.BROWN, ClothingType.NAIL_POLISH);
                addNailPolish("Metallic Silver Nail Polish", "Nicole Miller", EnumColor.GRAY, EnumColor.GRAY, ClothingType.NAIL_POLISH);
                addNailPolish("Metallic Purple Nail Polish", "Nicole Miller", EnumColor.PURPLE, EnumColor.PURPLE, ClothingType.NAIL_POLISH);
                addNailPolish("Black Onyx Nail Polish", "OPI", EnumColor.BLACK, EnumColor.BLACK, ClothingType.NAIL_POLISH);
                new OutfitMakerUI().setVisible(true);
                
            }
        });
    }

    private static void addToPane(JTextPane pane, String text) {
        pane.setText(pane.getText()+text+"\n");
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JCheckBox accessoryBox;
    private javax.swing.JLabel accessoryLabel;
    private static javax.swing.JTextPane accessoryPane;
    private javax.swing.JPanel accessoryPanel;
    private javax.swing.JLabel bottomLabel;
    private static javax.swing.JTextPane bottomPane;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private static javax.swing.JCheckBox nailPolishBox;
    private javax.swing.JLabel nailPolishLabel;
    private static javax.swing.JTextPane nailPolishPane;
    private javax.swing.JPanel nailPolishPanel;
    private javax.swing.JLabel topLabel;
    private static javax.swing.JTextPane topPane;
    private javax.swing.JPanel topPanel;
    private javax.swing.JPanel topPanel1;
    // End of variables declaration//GEN-END:variables
}
